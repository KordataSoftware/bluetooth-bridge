#!/bin/bash

INSTALL_DIR=/share/usb-bluetooth-bridge
GIT_REPO=https://github.com/KordataSoftware/bluetooth-bridge.git
START_SCRIPT=/home/pi/start_bridge

echo "Starting up Kordata usb-bluetooth-bridge"

FIRST_ARG=$1

function update_self_if_needed {
    # If there's a new version of this script, install it and execute that
    if ! cmp --silent $INSTALL_DIR/startup $START_SCRIPT ; then
        echo "Detected new version of startup script. Now installing and executing..."
        cp --remove-destination $INSTALL_DIR/startup $START_SCRIPT

        $START_SCRIPT -u
        exit 0
    fi
}

function install_deps_and_stuff {
    update_self_if_needed
    npm --prefix $INSTALL_DIR install $INSTALL_DIR
}

function init_git_repo {
    echo "Installation isn't a git repo. Cloning new copy."
    mv $INSTALL_DIR /share/bridge.old
    if git clone $GIT_REPO $INSTALL_DIR ; then
        install_deps_and_stuff
    else
        # Put stuff back where it was for now
        mv /share/bridge.old $INSTALL_DIR
        echo "Unable to clone repo, so running existing version."
    fi
}

function pull_any_changes_and_install {
    echo "Checking for updates..."

    if ! git -C $INSTALL_DIR remote update ; then
        echo "Could not update software. This is probably because the device does not have a connection."
        return 0
    fi

    LOCAL_REV=$(git -C $INSTALL_DIR rev-parse @)
    REMOTE_REV=$(git -C $INSTALL_DIR rev-parse "origin/master")

    if [ $LOCAL_REV != $REMOTE_REV ]; then
        git -C $INSTALL_DIR pull origin master
        echo "Software updated."

        install_deps_and_stuff
    else
        echo "Software is already up to date."

        if [ FIRST_ARG = "-u" ]; then
            echo "Force update enabled so proceeding with update"
            install_deps_and_stuff
        fi
    fi
}

# Check if the installation is a git repo
if git -C $INSTALL_DIR rev-parse ; then
    pull_any_changes_and_install
else
    init_git_repo
fi

# Clear out old logs
echo "Clearing old log files"
find $INSTALL_DIR -name 'usb-bluetooth-bridge.log*' -mtime +30 -type f -exec rm -fv {} \;

# Start the service
echo "Now listening"
npm --prefix /share/usb-bluetooth-bridge start